
from langchain_ollama import OllamaEmbeddings
from langchain_chroma import Chroma
from langchain_core.documents import Document
import os
import pandas as pd


df=pd.read_csv("data.csv")## load your data from the csv file
embeddings=OllamaEmbeddings(model="mxbai-embed-large")
db_location="./chroma_langchain_db"# this is the file/folder that will contain all the retrival data from csv
add_documents=not os.path.exists(db_location)

if add_documents:
    documents = []
    ids = []
    
    for i, row in df.iterrows():
        document = Document(
            page_content=row["Title"] + " " + row["Review"],
            metadata={"rating": row["Rating"], "date": row["Date"]},
            id=str(i)
        )
        ids.append(str(i))
        documents.append(document)
        
vector_store = Chroma(
    collection_name="restaurant_reviews",
    persist_directory=db_location,
    embedding_function=embeddings
)

if add_documents:
    vector_store.add_documents(documents=documents, ids=ids)
    
retriever = vector_store.as_retriever(
    search_kwargs={"k": 5}
)
#this is used to control the number of documents that will be retrived
#k specifies how many of the most similar documents (or vectors) you want to retrieve.
#search_kwargs is a dictionary of keyword arguments passed to the search or retriever method; in this case, it sets k to 5.
#results=retriever.search(query="your search query",**search_kwargs)
